Installation
============

The MxDC tarball contains the following directory structure after unpacking it (not all files/directories are shown).
The archive should be unpacked into the installation directory, preferably on an NFS mounted partition that is
available to on the beamlines which will be using it.


       mxdc
        ├── bin
        │   ├── archiver        # command to archive a directory to a portable disk on the fly while collecting data
        │   ├── blconsole       # beamline commissioning console, for doing motor scans, and diagnostics
        │   ├── hutchviewer     # a stripped-down version of MxDC which run inside the hutch and by administrators
        │   ├── imgview         # Diffraction image viewer component only
        │   ├── mxdc            # Main MxDC program command
        │   ├── plotxdi         # program to plot XDI files generated by MxDC and blconsole, such as scan files.
        │   └── sim-mxdc        # MxDC command with a simulated beamline
        ├── deploy
        │   ├── imgsync         # initscript for the Data Synchronization Service for live backups
        │   ├── mxdc.sh         # bash script to add the mxdc directory to the user path
        │   └── mxdc.csh        # csh/tcsh version of above
        ├── docs
        │   └── html            # HTML user documentation also available from the help menu within MxDC
        ├── etc                 # Beamline configuration files go in here, one per beamline.
        ├── mxdc
        │   ├── beamlines       # The beamline modules, currently only the MX module is available
        │   ├── com             # Control System communication protocols, currently only EPICS Channel Access
        │   ├── conf            # Configuration and startup modules
        │   ├── controllers     # Modules linking widgets engines and devices. The core of the MxDC GUI logic
        │   ├── devices         # Device modules
        │   ├── engines         # Functional modules implementing different experimental schemes with multiple devices
        │   ├── libs
        │   │   └── imageio     # Image Input/Output package. Externally developed.
        │   ├── scripts         # Managed Sequences of tasks
        │   ├── services        # Network servers, and clients
        │   ├── utils           # Utilities used in different parts of the program
        │   └── widgets         # Graphical User interface modules
        ├── share               # Resources
        │   ├── data            # GUI user interface files (Glade-3) and other resources
        │   └── gtk             # More resource files
        ├── requirements.txt    # Python requirements installable with `pip install`
        └── README.md           # This file
   ```

1. Install the python requirements. See the `requirements.txt` file in the top-level directory
2. Install other system-level dependencies.
    * PyGObject (Package name `gobject-introspection` on RedHat base distributions like SL or CentOS)
    * Webkit2gtk3 (Package name `webkitgtk4` on RedHat base distributions like SL or CentOS)
    * Avahi-Python (Package name `avahi-ui-tools` on RedHat)
3. Modify `mxdc.sh` and/or `mxdc.csh` and copy to a location so that it is sourced when users login.  For example
   `/etc/profile.d`. Alternatively, leave the edited files in place, but modify users login scripts to source the file.
4. Prepare beamline configuration files in the `etc` directory within the top-level install location based off the
   examples. Note that the configuration is different from previous versions. MxDC selects which configuration to
   load based on the subnet of the computer running the program. Therefore make sure `CONFIG.subnet` is selected
   appropriately. If your beamlines are not able to be separated into distinct subnets, it is recommended to maintain
   a distinct installation for each beamline.
5. If you need to use the Messenger Chat feature, make sure you have a REDIS server running and able to accept connection from
   other hosts on your network.
6. The new MxDC is tightly coupled with MxLIVE. A functioning install of MxLIVE is required to run MxDC.
    	 